{"version":3,"file":"static/js/186.6d444a62.chunk.js","mappings":"oOAKe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAASO,MAAK,SAAAC,GAAG,OAAIJ,EAAUI,EAAIC,QAAlB,GACnC,GAAE,CAACT,IAECG,EAIL,OACE,8BACGA,EAAOO,OAAS,GACf,wBACGP,EAAOQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,GAAIC,EAAc,EAAdA,QACzB,OACE,2BACE,wBAAKF,KACL,uBAAIE,MAFGD,EAKZ,OAGH,qEAIP,C,+LChCKE,EAAU,mCAMT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,wGAEGC,EAFH,sCAE6CF,GAF7C,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,2FAEGN,EAFH,6BAEoCM,EAFpC,oBAEqDR,GAFrD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BxB,GAA9B,2FAEGiB,EAFH,iBAEwBjB,EAFxB,oBAE2Ce,GAF3C,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeI,EAAtB,kC,aAAO,O,oBAAA,WAA8BzB,GAA9B,2FAEGiB,EAFH,iBAEwBjB,EAFxB,4BAEmDe,GAFnD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAAgCN,GAAhC,2FAEGiB,EAFH,iBAEwBjB,EAFxB,4BAEmDe,GAFnD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFA5DPH,EAAAA,EAAAA,SAAAA,QAHiB,+B","sources":["components/Reviews/Reviews.jsx","components/services/fetchMovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReview } from 'components/services/fetchMovies';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [review, setReview] = useState(null);\n\n  useEffect(() => {\n    fetchMovieReview(movieId).then(res => setReview(res.results));\n  }, [movieId]);\n\n  if (!review) {\n    return;\n  }\n\n  return (\n    <>\n      {review.length > 0 ? (\n        <ul>\n          {review.map(({ author, id, content }) => {\n            return (\n              <li key={id}>\n                <h4>{author}</h4>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for the movie.</p>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6bc3884873d8f590ffada24647960cbf';\n\naxios.defaults.baseURL = BASE_URL;\n\n// get popular movies\n\nexport async function fetchPopularMovies() {\n  try {\n    const response = `/trending/movie/day?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n//get movies by query\n\nexport async function fetchSearchMovies(query) {\n  try {\n    const response = `search/movie?query=${query}&api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie by Id\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = `/movie/${movieId}?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie cast\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = `/movie/${movieId}/credits?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie review\n\nexport async function fetchMovieReview(movieId) {\n  try {\n    const response = `/movie/${movieId}/reviews?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n"],"names":["Reviews","movieId","useParams","useState","review","setReview","useEffect","fetchMovieReview","then","res","results","length","map","author","id","content","API_KEY","fetchPopularMovies","response","axios","data","console","log","fetchSearchMovies","query","fetchMovieById","fetchMovieCast"],"sourceRoot":""}