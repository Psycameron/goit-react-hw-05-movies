{"version":3,"file":"static/js/884.2ec63b61.chunk.js","mappings":"+SAGMA,EAAU,mCAMT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,wGAEGC,EAFH,sCAE6CF,GAF7C,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,2FAEGN,EAFH,6BAEoCM,EAFpC,oBAEqDR,GAFrD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,2FAEGR,EAFH,iBAEwBQ,EAFxB,oBAE2CV,GAF3C,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAA8BD,GAA9B,2FAEGR,EAFH,iBAEwBQ,EAFxB,4BAEmDV,GAFnD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,2FAEGR,EAFH,iBAEwBQ,EAFxB,4BAEmDV,GAFnD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFA5DPH,EAAAA,EAAAA,SAAAA,QAHiB,+B,4HCMF,SAASU,IAAgB,IAAD,IAC7BH,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRX,EAAAA,EAAAA,IAAeC,GAASW,MAAK,SAAAC,GAAG,OAAIL,EAASK,EAAb,GACjC,GAAE,CAACZ,IAECM,EAAL,CAIA,IAAQO,EACNP,EADMO,OAAQC,EACdR,EADcQ,SAAUC,EACxBT,EADwBS,aAAcC,EACtCV,EADsCU,YAAaC,EACnDX,EADmDW,MAAOC,EAC1DZ,EAD0DY,aAEtDC,EAAcN,EAAOO,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KACnDC,EAAYC,KAAKC,MAA8B,IAAvBC,OAAOT,GAAuB,IACtDU,EAAcb,EAAac,MAAM,EAAG,GACpCC,EAAY,oBAAGtB,EAASuB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACE,4BACE,SAAC,KAAD,CAAMD,MAAO,CAAEC,KAAMxB,GAAYyB,GAAIH,EAArC,UACE,mBAAQI,KAAK,SAAb,wBAGF,4BACE,gBAAKC,IA7BI,mCA6BYnB,EAAaoB,IAAI,gBACtC,0BACGnB,EADH,KACYW,EADZ,QAGA,wCAAgBJ,EAAhB,QACA,uCACA,uBAAIV,KACJ,oCACA,uBAAIK,KACJ,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMY,MAAO,CAAEC,KAAMF,GAAgBG,GAAG,OAAxC,qBAIF,yBACE,SAAC,KAAD,CAAMF,MAAO,CAAEC,KAAMF,GAAgBG,GAAG,UAAxC,8BAON,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAzCL,CA6CF,C","sources":["components/services/fetchMovies.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6bc3884873d8f590ffada24647960cbf';\n\naxios.defaults.baseURL = BASE_URL;\n\n// get popular movies\n\nexport async function fetchPopularMovies() {\n  try {\n    const response = `/trending/movie/day?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n//get movies by query\n\nexport async function fetchSearchMovies(query) {\n  try {\n    const response = `search/movie?query=${query}&api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie by Id\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = `/movie/${movieId}?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie cast\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = `/movie/${movieId}/credits?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie review\n\nexport async function fetchMovieReview(movieId) {\n  try {\n    const response = `/movie/${movieId}/reviews?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`ðŸš€ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n","import React, { useEffect, useState, Suspense } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport { fetchMovieById } from 'components/services/fetchMovies';\n\nconst IMAGEURL = 'https://image.tmdb.org/t/p/w500/';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(res => setMovie(res));\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  const { genres, overview, release_date, poster_path, title, vote_average } =\n    movie;\n  const movieGenres = genres.map(genre => genre.name).join(' ');\n  const userScore = Math.round((Number(vote_average) * 100) / 10);\n  const releaseDate = release_date.slice(0, 4);\n  const prevLocation = location.state?.from ?? '/';\n\n  return (\n    <div>\n      <Link state={{ from: location }} to={prevLocation}>\n        <button type=\"button\">Go back</button>\n      </Link>\n\n      <div>\n        <img src={IMAGEURL + poster_path} alt=\"poster img\" />\n        <h2>\n          {title} ({releaseDate})\n        </h2>\n        <p>User score: {userScore}%</p>\n        <h3>Overviews</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{movieGenres}</p>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link state={{ from: prevLocation }} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link state={{ from: prevLocation }} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n"],"names":["API_KEY","fetchPopularMovies","response","axios","data","console","log","fetchSearchMovies","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReview","MovieDetails","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","res","genres","overview","release_date","poster_path","title","vote_average","movieGenres","map","genre","name","join","userScore","Math","round","Number","releaseDate","slice","prevLocation","state","from","to","type","src","alt","Suspense","fallback"],"sourceRoot":""}