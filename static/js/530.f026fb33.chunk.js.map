{"version":3,"file":"static/js/530.f026fb33.chunk.js","mappings":"+SAGMA,EAAU,mCAMT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,wGAEGC,EAFH,sCAE6CF,GAF7C,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,2FAEGN,EAFH,6BAEoCM,EAFpC,oBAEqDR,GAFrD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA8BC,GAA9B,2FAEGR,EAFH,iBAEwBQ,EAFxB,oBAE2CV,GAF3C,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeK,EAAtB,kC,aAAO,O,oBAAA,WAA8BD,GAA9B,2FAEGR,EAFH,iBAEwBQ,EAFxB,4BAEmDV,GAFnD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFAcA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,2FAEGR,EAFH,iBAEwBQ,EAFxB,4BAEmDV,GAFnD,SAIoBG,EAAAA,EAAAA,IAAUD,GAJ9B,uBAIKE,EAJL,EAIKA,KAJL,kBAMIA,GANJ,gCAQHC,QAAQC,IAAR,mDARG,gFA5DPH,EAAAA,EAAAA,SAAAA,QAHiB,+B,8ICDjB,EAA6B,2BAA7B,EAA0E,gCAA1E,EAA6H,iCAA7H,EAAsL,sCAAtL,EAAyO,2BAAzO,EAAiR,2B,SCMlQ,SAASU,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAON,EAAP,KAAcS,EAAd,KAEA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAYJ,EAAaK,IAAI,UAEnCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uFACXH,EADW,2EAMOhB,EAAAA,EAAAA,IAAkBgB,GANzB,OAMRR,EANQ,OAOdC,EAAUD,EAAOY,SAPH,gDASdtB,QAAQC,IAAR,0CATc,yDAAH,qDAYfoB,GACD,GAAE,CAACH,IAmBJ,OACE,iCACE,kBAAMK,UAAWC,EAAgBC,SAfV,SAAAC,GAGzB,GAFAA,EAAEC,iBAEmB,KAAjBxB,EAAMyB,OACR,OAAOC,MAAM,+HAIfd,EAD6B,KAAVZ,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAG/CS,EAAS,GACV,EAIG,WACE,kBACEW,UAAWC,EACXM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAO/B,EACPgC,SA3BkB,SAAAT,GACxBd,EAASc,EAAEU,cAAcF,MAAMG,cAChC,KA4BK,mBAAQP,KAAK,SAASP,UAAWC,EAAjC,UACE,iBAAMD,UAAWC,EAAjB,0BAGJ,eAAID,UAAWC,EAAf,SACGd,EAAO4B,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACpB,OACE,eAAajB,UAAWC,EAAxB,UACE,SAAC,KAAD,CAAMiB,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAM3B,GAA1C,SACGuB,KAFIC,EAMZ,QAIR,C","sources":["components/services/fetchMovies.js","webpack://goit-react-hw-05-movies/./src/pages/Movies.module.css?d157","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '6bc3884873d8f590ffada24647960cbf';\n\naxios.defaults.baseURL = BASE_URL;\n\n// get popular movies\n\nexport async function fetchPopularMovies() {\n  try {\n    const response = `/trending/movie/day?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`üöÄ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n//get movies by query\n\nexport async function fetchSearchMovies(query) {\n  try {\n    const response = `search/movie?query=${query}&api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`üöÄ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie by Id\n\nexport async function fetchMovieById(movieId) {\n  try {\n    const response = `/movie/${movieId}?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`üöÄ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie cast\n\nexport async function fetchMovieCast(movieId) {\n  try {\n    const response = `/movie/${movieId}/credits?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`üöÄ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n\n// get movie review\n\nexport async function fetchMovieReview(movieId) {\n  try {\n    const response = `/movie/${movieId}/reviews?api_key=${API_KEY}`;\n\n    const { data } = await axios.get(response);\n\n    return data;\n  } catch (error) {\n    console.log(`üöÄ ~ fetchPopularMovies ~ error:`, error);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchForm\":\"Movies_searchForm__H4jJ4\",\"searchFormInput\":\"Movies_searchFormInput__U6GMk\",\"searchFormButton\":\"Movies_searchFormButton__Y67LZ\",\"searchFormButtonLabel\":\"Movies_searchFormButtonLabel__V8qQW\",\"moviesList\":\"Movies_moviesList__Rop+n\",\"moviesItem\":\"Movies_moviesItem__9kR7W\"};","import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport { fetchSearchMovies } from 'components/services/fetchMovies';\n\nimport css from './Movies.module.css';\n\nexport default function Movies() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  // const fullPath = location.pathname + location.search;\n  const movieName = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!movieName) {\n        return;\n      }\n\n      try {\n        const movies = await fetchSearchMovies(movieName);\n        setMovies(movies.results);\n      } catch (error) {\n        console.log(`üöÄ ~ fetchData ~ error:`, error);\n      }\n    };\n    fetchData();\n  }, [movieName]);\n\n  const handleQueryChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n\n    if (query.trim() === '') {\n      return alert('–í–≤–µ–¥–∏ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞');\n    }\n\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className={css.searchForm} onSubmit={handleSearchSubmit}>\n        <input\n          className={css.searchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n\n        <button type=\"submit\" className={css.searchFormButton}>\n          <span className={css.searchFormButtonLabel}>Search</span>\n        </button>\n      </form>\n      <ul className={css.moviesList}>\n        {movies.map(({ title, id }) => {\n          return (\n            <li key={id} className={css.moviesItem}>\n              <Link to={`/movies/${id}`} state={{ from: location }}>\n                {title}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n"],"names":["API_KEY","fetchPopularMovies","response","axios","data","console","log","fetchSearchMovies","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReview","Movies","useState","movies","setMovies","setQuery","useSearchParams","searchParams","setSearchParams","location","useLocation","movieName","get","useEffect","fetchData","results","className","css","onSubmit","e","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","map","title","id","to","state","from"],"sourceRoot":""}